//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoPP.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class persona
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public persona()
        {
            this.proyecto1 = new HashSet<proyecto>();
            this.tarea = new HashSet<tarea>();
        }

        [Display(Name = "Nombre")]
        [RegularExpression(@"^[a-zA-Z''-'\s]+$", ErrorMessage = "El nombre solo puede estar compuesto por letras.")]
        [Required(ErrorMessage = "Campo requerido")]
        public string nombre { get; set; }

        [Display(Name = "Primer apellido")]
        [RegularExpression(@"^[a-zA-Z''-'\s]+$", ErrorMessage = "El primer apellido solo puede estar compuesto por letras")]
        [Required(ErrorMessage = "Campo requerido")]
        public string apellido1 { get; set; }

        [Display(Name = "Segundo apellido")]
        [RegularExpression(@"^[a-zA-Z''-'\s]+$", ErrorMessage = "El segundo apellido solo puede estar compuesto por letras")]
        [Required(ErrorMessage = "Campo requerido")]
        public string apellido2 { get; set; }

        [RegularExpression(@"^[0-9]{9,9}$", ErrorMessage = "La cédula debe contener 9 numeros")]
        [Display(Name = "Cédula")]
        [Required(ErrorMessage = "Campo requerido")]
        public string cedula { get; set; }

        [RegularExpression(@"^[A-Z][0-9]{5,5}$", ErrorMessage = "La primera letra debe estar en mayúscula y contener 5 digitos despues de esta")]
        [Display(Name = "Carné")]
        public string carne { get; set; }

        [RegularExpression(@"^[a-zA-Z0-9\.\-]+@[a-zA-Z0-9\.\-]+\.[a-z]{1,3}$", ErrorMessage = "No es un formato de correo electronico válido")]
        [Display(Name = "Correo electrónico")]
        [Required(ErrorMessage = "Campo requerido")]
        public string email { get; set; }


        public string id { get; set; }


        public string IdProyecto { get; set; }
    
        public virtual AspNetUsers AspNetUsers { get; set; }
        public virtual proyecto proyecto { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<proyecto> proyecto1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<tarea> tarea { get; set; }
    }
}
