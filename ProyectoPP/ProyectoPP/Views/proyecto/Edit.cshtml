@model ProyectoPP.Models.proyecto

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editar Detalles</h2>

@section Scripts {
    <!--Todo esto es para el date picker-->
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">

    <script type="text/javascript">

                             $(document).ready(function () {
                                 $('input[type=datetime]').datepicker({
                                     dateFormat: "yy-mm-dd",
                                     changeMonth: true,
                                     changeYear: true,
                                     yearRange: "-60:+0"
                                 });

                             });
    </script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Nombre del Proyecto: @Html.DisplayFor(model => model.nombre)</h4>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
           @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaInicio, new { htmlAttributes = new { @class = "form-control"}})
                @Html.ValidationMessageFor(model => model.fechaInicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaFinal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaFinal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaFinal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lider, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.lider, (SelectList)ViewBag.Listalider, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.lider, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @{

                    IList<SelectListItem> listaEstados = new List<SelectListItem>
                        {
                        new SelectListItem{Text = "Pendiente", Value = "Pendiente"},
                        new SelectListItem{Text = "En Progreso", Value = "En Progreso"},
                        new SelectListItem{Text = "Cancelado", Value = "Cancelado"},
                        new SelectListItem{Text = "Completado", Value = "Completado"}
                        };
                }

                @Html.DropDownListFor(m => m.estado, listaEstados, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>
        </div>
    
        <div class="form-group">
            @Html.Label("Agregar Miembros:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(m=> m.listaAgregar, (MultiSelectList)ViewBag.ListaAgregar, htmlAttributes: new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.lider, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Quitar Miembros:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(m=> m.listaQuitar, (MultiSelectList)ViewBag.ListaQuitar, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.lider, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Aceptar" class="btn btn-default" />
            <button class="btn btn-default" onclick="location.href='@Url.Action("Edit", "proyecto", new { id = Model.id })';return false;">Cancelar</button>
        </div>
    </div>

}
